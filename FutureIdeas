Process Work Flow for Adding a New Season

We need to assume to following
Hierarchy looks as follows

Season
    Division - MM to Season
        Team - FK to Division | MM to Season
            Player - FK to Team
                PlayerStats - FK to Player | FK to Season
            TeamStats - FK to Team | FK to Season

When we add a new Season we do the following
1. Add the New Season to the Division and Team
2. Generate new PlayerStats and new TeamStats with FK to the new season

When a Commissioner adds a new season what do they need to be able to do?
1. Import last seasons Divisions and Teams
2. Rename Divisions/Remove Divisions
3. Add new Divisions
4. Remove/Add new teams
5. Change what division a team is in

What does a Commissioner need to do during the season?
1. Schedule Games - Done
2. Book Ice Slots - Done
3. Schedule Refs/Scorekeeper - Done
4. Enter Game Results
5. Enter Game Stats

What does a Captain need to during the season?
1. At beginning of season, update the roster with the players for that season


Going to add in new Tables to the DB

Season
    Division - MM to Season
        Team - FK to Division | MM to Season
            Player - FK to Team
                PlayerStats - FK to Player | FK to Season
                    Goal - FK to PlayerStats | FK to Game
                    Penalty - FK to PlayerStats | FK to Game
            TeamStats - FK to Team | FK to Season

Scorekeeper
Referee
Rink
    IceSlot - FK to Rink
        Game - FK to Team1 | FK to Team2 | FK to Scorekeeper | MM to Referees
            GameResult - FK to Game | FK to Team1 | FK to Team2

When Entering game results, with the time of the goal and the period and team, we don't need to enter the box score

Enter Game Report Functionality
- Split into 3 different pages
1. Select a game to enter results for (selectGame)
    - Using HREF the user selects a game, and that game id is sent to view number 2.
2. Mark what players signed in, and add any new players if needed (gameReportRoster)
    - Using the game.id we run the following queries
        a. Get Home Team
        b. Get Away Team
        c. Get all Home Team Players
        d. Get all Away Team Players
        e. Generate Home Team Formset
        f. Generate Away Team Formset
    - We then add these to context and generate out template
    - Our Template loads a table for each team to mark off checked in players as well as 2 forms to add new players

    - Our post request gathers the following data
        a. List of all HomePlayers who Played
        b. List of all AwayPlayers who Played
        c. Formset data of all HomePlayers who Played
        d. Formset data of all AwayPlayers who Played
    - To process the data of the formsets
        - We loop through each formset, verifying it is valid and creating a new player object for each added player

    This completes what step 2 does

    At this point, our tempResults will hold the following
        1. Game
        2. HomePlayersPlayed
        3. AwayPlayersPlayed


3. Add Goals and Penalties for the game


Entering Game Results, requires the following workflow

1. User Selects a game to enter the score for
    - That game.id is needed


Player Account Management Business Logic

First we handle when adding a New Player
1. If New Player isCaptain or altCaptain, then an e-mail is required.
2. If New Player is not a Captain, if they want an account, they must enter an e-mail.


1. Check that isCaptain or altCaptain is true. If True:
    - Create a custom user of Type Captain and set it to self.user
2. If not True, we check if an e-mail was entered, if True:
    - Create a custom user of Type Player and set it to self.user

Then we handle updating an existing player
1. If oldPlayer had a User Account, we then check for the following
    - If oldPlayer wasn't a captain, and newPlayer is a captain, update user Type to Captain
    - If oldPlayer was a captain, and newPlayer is not a captain, update user Type to Player
    - If oldPlayer.eMail != newPlayer.eMail, we update the user account e-mail to the new e-mail
2. If oldPlayer doesn't have a User Account, and newPlayer has an e-mail entered
    - We did what was done in the case of a new Player

